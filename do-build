#! /usr/bin/env bash
# do-build [ --platform <platform> ] [ --results <results-dir> ]

set -e -o pipefail

print() { echo "$1" >&2; }
inform() { print "$0: $1"; }
warn() { print "Warning: $1"; }
error() { inform "Error: $1"; }
fail() { [ "$1" ] && error "$1"; return 1; }
usage() { print "$USAGE"; fail "$1"; }

# The usage message
USAGE='Usage: do-build [ --platform <platform> ] [ --results <repository> ]'

# Defaults for options
OPT_PLATFORM='leanXcam'
OPT_RESULTS=

# Read options
while [ "${1:0:1}" == '-' ]; do
	if [ "$1" == '--platform' ]; then
		[ "$2" ] && OPT_PLATFORM=$2 || usage "Options requires an argument: $1"
		shift
	elif [ "$1" == '--results' ]; then
		[ "$2" ] && OPT_RESULTS=$2 || usage "Options requires an argument: $1"
		shift
	else
		usage "Unknown option: $1"
	fi
	
	shift
done

[ "$1" ] && usage "No arguments required."

if [ "$OPT_PLATFORM" == 'leanXcam' ]; then
	make -C "u-boot-1.1.6" bf537-leanxcam_config
elif [ "$OPT_PLATFORM" == 'indXcam' ]; then
	make -C "u-boot-1.1.6" bf537-indxcam_config
else
	fail "Unknown platform: $OPT_PLATFORM"
fi

time make -C "u-boot-1.1.6"
[ "$OPT_RESULTS" ] && cp u-boot-1.1.6/u-boot.{bin,ldr} "HISTORY" "$OPT_RESULTS"
